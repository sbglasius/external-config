plugins {
    id 'java'
    id 'groovy'
    id 'maven-publish'
    id 'signing'
    id 'io.spring.dependency-management' version '1.1.4'
}

group "dk.glasius"

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    implementation "org.grails:grails-core"
    implementation "org.codehaus.groovy:groovy-yaml:3.0.21"

    implementation "io.micronaut:micronaut-core"
    implementation "io.micronaut:micronaut-inject"

    testImplementation "org.grails:grails-testing-support"

    runtimeOnly 'com.virtualdogbert:GroovyConfigWriter:1.1'
    runtimeOnly 'org.yaml:snakeyaml:2.2'
}

tasks.withType(Test).configureEach {
    systemProperty 'TEST_HOME', 'home-value'
    systemProperty 'user.home', System.getProperty('user.home')
    systemProperty 'grails.env', 'TEST'
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = 'external-config'
            version = project.version

            from components.java
            pom {
                name = 'External Config'
                description = 'Mimic the Grails 2 way of handling external configurations'
                url = 'https://github.com/sbglasius/external-config'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'sbglasius'
                        name = 'SÃ¸ren Berg Glasius'
                        email = 'soeren@glasius.dk'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/sbglasius/external-config.git'
                    developerConnection = 'scm:git:ssh:github.com:sbglasius/external-config.git'
                    url = 'https://github.com/sbglasius/external-config/'
                }
            }
        }
    }
}

if (System.getenv('SIGNING_KEY_ID')) {
    ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    ext["signing.password"] = System.getenv('SIGNING_PASSPHRASE')
    ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_FILE')
}

afterEvaluate {
    signing {
        if (System.getenv('SIGN_ARMORED_KEY')) {
            String signingKey = System.getenv('SIGN_ARMORED_KEY')
            String signingPassword = System.getenv('SIGN_PASSWORD')
            useInMemoryPgpKeys(signingKey, signingPassword)
        }
        required {
            isReleaseVersion
        }

        sign publishing.publications.maven
    }
}
tasks.withType(Sign).configureEach {
    onlyIf { isReleaseVersion }
}
