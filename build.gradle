
plugins {
    id 'java'
    id 'groovy'
    id "io.github.gradle-nexus.publish-plugin"
}

ext {
    isBuildSnapshot = version.toString().endsWith("-SNAPSHOT")
    isReleaseVersion = !isBuildSnapshot
}

allprojects {
    repositories {
        mavenCentral()
        maven { url "https://repo.grails.org/grails/core/" }
    }

    java {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }


    ext {
        isBuildSnapshot = version.toString().endsWith("-SNAPSHOT")
        isReleaseVersion = !isBuildSnapshot
    }
    
    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }

    tasks.withType(GroovyCompile).configureEach {
        configure(groovyOptions) {
            forkOptions.jvmArgs = ['-Xmx1024m']
        }
    }

}

import io.github.gradlenexus.publishplugin.InitializeNexusStagingRepository
tasks.withType(InitializeNexusStagingRepository).configureEach {
    shouldRunAfter(tasks.withType(Sign))
}

nexusPublishing {
    repositories {
        sonatype {
            def ossUser = System.getenv("SONATYPE_USERNAME") ?: project.hasProperty("sonatypeOssUsername") ? project.sonatypeOssUsername : ''
            def ossPass = System.getenv("SONATYPE_PASSWORD") ?: project.hasProperty("sonatypeOssPassword") ? project.sonatypeOssPassword : ''
            def ossStagingProfileId = System.getenv("SONATYPE_STAGING_PROFILE_ID") ?: project.hasProperty("sonatypeOssStagingProfileIdExternalConfig") ? project.sonatypeOssStagingProfileIdExternalConfig : ''

            nexusUrl = uri("https://oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://oss.sonatype.org/content/repositories/snapshots/")
            username = ossUser
            password = ossPass
            stagingProfileId = ossStagingProfileId
        }
    }
}

tasks.register('snapshotVersion')  {
    doLast {
        if (!isBuildSnapshot) {
            ant.propertyfile(file: "gradle.properties") {
                entry(key: "version", value: "${project.version}-SNAPSHOT")
            }
        }
    }
}
